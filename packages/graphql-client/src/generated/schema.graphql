type User {
  id: ID!
  email: String!
  name: String!
  lastName: String!
  avatar: String!
  password: String!
  isActive: Boolean!
}

type UserBoard {
  id: ID!
  email: String!
  name: String!
  lastName: String!
}

input createUserInput {
  email: String!
  lastName: String!
  name: String!
  password: String!
  avatar: String
}

input updateUserInput {
  id: ID!
  email: String
  lastName: String
  name: String
  password: String
  avatar: String
}

type Query {
  getUsers: [User!]!
  getUser(id: ID!): User
  getUserByEmail(email: String!): UserBoard
  getUserCategories(userId: ID!): [Category!]!
  getCategory(id: ID!): Category
  getUserBoards(userId: ID!): [Board]!
  getTransaction(id: ID!): Transaction
  getCategoryTransactions(categoryId: ID!): [Transaction]!
  getBoardTransactions(boardId: ID!): [BoardTransaction]!
  getDateTransactions(date: DateTime!): [Transaction]!
}

type Mutation {
  createUser(input: createUserInput!): Boolean
  updateUser(input: updateUserInput!): Boolean
  deleteUser(id: ID!): Boolean
  createCategory(input: createCategoryInput!): Boolean
  updateCategory(input: updateCategoryInput!): Boolean
  deleteCategory(id: ID!): Boolean
  createBoard(input: createBoardInput!): Boolean
  updateBoard(input: updateBoardInput!): Boolean
  deleteBoard(id: ID!): Boolean
  createTransaction(input: createTransactionInput!): Boolean
  updateTransaction(input: updateTransactionInput!): Boolean
  deleteTransaction(id: ID!): Boolean
}

type Category {
  id: ID!
  name: String!
  type: String!
  icon: String!
  userId: ID!
}

input createCategoryInput {
  name: String!
  type: String!
  icon: String!
  userId: ID!
}

input updateCategoryInput {
  id: ID!
  name: String
  type: String
  icon: String
  userId: ID
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Board {
  id: ID!
  name: String!
  owner: UserBoard!
  createdAt: DateTime!
  boardPermissions: [BoardPermission]
}

type BoardPermission {
  permissions: [String]!
  user: UserBoard!
}

input createBoardInput {
  owner: ID!
  name: String!
}

input updateBoardInput {
  owner: ID!
  name: String
}

type Transaction {
  id: ID!
  description: String!
  amount: Float!
  date: DateTime!
  categoryId: ID!
  boardId: ID!
}

type BoardTransaction {
  id: ID!
  description: String!
  amount: Float!
  date: DateTime!
  category: CategoryTransaction!
  boardId: ID!
}

type CategoryTransaction {
  id: ID!
  name: String!
  type: String!
  icon: String!
}

input createTransactionInput {
  description: String!
  amount: Float!
  date: DateTime!
  categoryId: ID!
  boardId: ID!
}

input updateTransactionInput {
  id: ID!
  description: String
  amount: Float
  date: DateTime
  categoryId: ID
  boardId: ID
}